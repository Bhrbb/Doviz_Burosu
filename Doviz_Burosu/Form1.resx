<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label2.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B//Z
</value>
  </data>
</root>